{
    "critiques": {
        "680": {
            "rubric_items": {
                "5510": {
                    "autograded": true,
                    "result": "failed",
                    "observation": "Not all of the tests passed.\n\n```\n************************************************************************\n                         Test Failure Feedback                          \n************************************************************************\n\nFailed Test: 2. Test functionality of MinimaxPlayer.minimax()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 279, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1, False)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 290, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1,True)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 279, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1, False)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 290, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1,True)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 279, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1, False)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 290, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1,True)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 279, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1, False)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 290, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1,True)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 279, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1, False)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 297, in minimax\n    return current_move\nUnboundLocalError: local variable 'current_move' referenced before assignment\n\n\nFailed Test: 3. Test that minimax() raises SearchTimeout when the timer expires\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 279, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1, False)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 290, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1,True)\n\n                     ...lines elided for space...                     \n\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 279, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1, False)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 290, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1,True)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 279, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1, False)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 290, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1,True)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 279, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1, False)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 290, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1,True)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 279, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1, False)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 290, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1,True)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 279, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1, False)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 290, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1,True)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 279, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1, False)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 290, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1,True)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 279, in minimax\n    child_score, child_move = self.minimax(game_forecast, depth-1, False)\n  File \"/home/vmuser_vzbfngjd/workspace/game_agent.py\", line 297, in minimax\n    return current_move\nUnboundLocalError: local variable 'current_move' referenced before assignment\n\n\nFailed Test: 4. Test that MinimaxPlayer successfully plays a full game\n----------------------------------------------------------------------\nTraceback (most recent call last):\nUnboundLocalError: local variable 'current_move' referenced before assignment\n\nDuring handling of the above exception, another exception occurred:\n\nAssertionError: Your agent raised an error while attempting to play a complete game against another agent.  Make sure that your agent can play an entire game -- including selecting initial moves on an empty board.\nException: local variable 'current_move' referenced before assignment\n\n\nFailed Test: 7. Test functionality of AlphaBetaPlayer.alphabeta()\n----------------------------------------------------------------------\nAssertionError: Failed to cut off search -- expanded too many nodes. (i.e., your agent did not prune at this node, but a correct alpha beta search did prune at this node when following the same expansion order that your agent followed.)\nAlpha: 6.0\nBeta: 5.0\nGame tree evaluation order:\n[(3, 5), (3, 7)]\n[(3, 3)]\n\nNodes are shown with each layer sorted in the order the nodes were expanded\nduring search.  All nodes in each successive layer are children of the\nfurthest-right node in the parent layer above it.\n\nTest Case Details:\n------------------\nHeuristic: open_move_score\nDepth limit: 2\nInitial Board State:\n     0   1   2   3   4   5   6   7   8\n0  |   |   |   |   |   |   |   |   |   | \n1  |   |   |   |   |   |   |   |   |   | \n2  |   |   |   |   | - |   |   |   |   | \n3  |   |   | - |   | - |   | - |   |   | \n4  |   |   | - |   | - |   | - |   |   | \n5  |   |   | - |   | 2 |   | 1 | - |   | \n6  |   |   |   | - | - | - |   |   |   | \n7  |   |   |   |   |   |   |   |   |   | \n8  |   |   |   |   |   |   |   |   |   | \n\ngame._board_state:\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 59]\n\n\n\n************************************************************************\n                          Test Result Summary                           \n************************************************************************\n\n1. Test output interface of MinimaxPlayer.minimax():                   .\n2. Test functionality of MinimaxPlayer.minimax():                      E\n3. Test that minimax() raises SearchTimeout when the timer expires:    E\n4. Test that MinimaxPlayer successfully plays a full game:             F\n5. Test interface of AlphaBetaPlayer.alphabeta():                      .\n6. Test the interface of AlphaBetaPlayer.get_move():                   .\n7. Test functionality of AlphaBetaPlayer.alphabeta():                  F\n8. Test that alphabeta() raises SearchTimeout when the timer expires:  .\n9. Test iterative deepening in AlphaBetaPlayer.get_move():             .\n10. Test that AlphaBetaPlayer successfully plays a full game:          .\n11. Test output interface of custom_score():                           .\n12. Test output interface of custom_score_2():                         .\n13. Test output interface of custom_score_3():                         .\n\n------------------------------------------------------------------------\n            . - Test Passed    F - Test Failed    E - Error             \n\n```"
                },
                "7303": {
                    "autograded": true,
                    "result": "failed",
                    "observation": "Not all of the tests passed.\n\n```\n************************************************************************\n                         Test Failure Feedback                          \n************************************************************************\n\nFailed Test: 14. Submission includes heuristic_analysis.pdf\n----------------------------------------------------------------------\nAssertionError: False is not true : You must submit a report named heuristic_analysis.pdf for review.\n\n\nFailed Test: 15. Submission includes research_review.pdf\n----------------------------------------------------------------------\nAssertionError: False is not true : You must submit a report named research_review.pdf for review.\n\n\n************************************************************************\n                          Test Result Summary                           \n************************************************************************\n\n14. Submission includes heuristic_analysis.pdf:                        F\n15. Submission includes research_review.pdf:                           F\n\n------------------------------------------------------------------------\n            . - Test Passed    F - Test Failed    E - Error             \n\n```"
                }
            }
        }
    }
}